{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"column",
				"columnheader"
			],
			[
				"onlyOw",
				"onlyOwnDepartment"
			],
			[
				"onlyOwnD",
				"onlyOwnDepartmentVisible"
			],
			[
				"onlyO",
				"onlyOwnDepartment"
			],
			[
				"observab",
				"observableArray"
			],
			[
				"loadEvents",
				"loadEventsSuccessful"
			],
			[
				"assignedc",
				"assignedcount"
			],
			[
				"updateTSLi",
				"updateTSListSuccess"
			],
			[
				"tsList",
				"tsListItem"
			],
			[
				"statusboardQu",
				"statusboardQueueItem"
			],
			[
				"tsQueue",
				"tsQueueItem"
			],
			[
				"mysql_",
				"mysql_real_escape_string($this"
			],
			[
				"mysql",
				"mysql_real_escape_string($this"
			],
			[
				"cst",
				"cstackedpercentcolumn"
			],
			[
				"percen",
				"percentage"
			],
			[
				"Request",
				"RequestGotCancelled"
			],
			[
				"require",
				"requirePlace"
			],
			[
				"bc",
				"background-color"
			],
			[
				"navOpe",
				"navOpenInNewTab"
			],
			[
				"navOpen",
				"navOpenInBackgroundTab"
			],
			[
				"displa",
				"displayedRows"
			],
			[
				"displ",
				"displayedRows"
			],
			[
				"getOw",
				"getOwnRightsSuccessful"
			],
			[
				"getTSI",
				"getTSInfoSuccessful"
			],
			[
				"errorme",
				"errormessage"
			],
			[
				"loadAgents",
				"loadAgentsSuccessful"
			],
			[
				"loadDep",
				"loadDepartmentsSuccessful"
			],
			[
				"doc",
				"documentModeError"
			],
			[
				"vertical",
				"vertical-align"
			],
			[
				"resu",
				"results"
			],
			[
				"getDash",
				"getDashboardAgentInfo"
			],
			[
				"upload",
				"uploading"
			],
			[
				"showA",
				"showAgentUpload"
			],
			[
				"updateAgent",
				"updateAgentListGUID"
			],
			[
				"updateA",
				"updateAgentListToken"
			],
			[
				"dateSelectorShow",
				"dateSelectorShowToday"
			],
			[
				"clone",
				"cloneRequestData"
			],
			[
				"criti",
				"criticalError"
			],
			[
				"esca",
				"escapedCriticalError"
			],
			[
				"critic",
				"criticalErrorLoading"
			],
			[
				"succ",
				"successCallback"
			],
			[
				"loc",
				"lockedAction"
			],
			[
				"avail",
				"availableTS"
			],
			[
				"loadA",
				"loadAvailableTSSuccessful"
			],
			[
				"updateUser",
				"updateUserSkillsSuccessful"
			],
			[
				"force",
				"forceReassignRequest"
			],
			[
				"reass",
				"reassignMaskVisible"
			],
			[
				"loadTS",
				"loadAvailableTS"
			],
			[
				"reas",
				"reassignRequestSuccessful"
			],
			[
				"requeueR",
				"requeueRequestSuccessful"
			],
			[
				"createRequ",
				"createRequeuedRequest"
			],
			[
				"createRe",
				"createRequeuedRequest"
			],
			[
				"changeOw",
				"changeOwnPasswordError"
			],
			[
				"change",
				"changePasswordError"
			],
			[
				"mysql_re",
				"mysql_real_escape_string"
			],
			[
				"queue",
				"queuetime"
			],
			[
				"queu",
				"queuetime"
			],
			[
				"reopenRequest",
				"reopenRequestSuccessful"
			],
			[
				"loading",
				"loadingHistoricRequests"
			],
			[
				"fun",
				"function"
			],
			[
				"agentLo",
				"agentLoginSuccessful"
			],
			[
				"loadRe",
				"loadRequestSuccessful"
			],
			[
				"phonest",
				"phonestatus"
			],
			[
				"phone",
				"phonestatus"
			],
			[
				"confir",
				"confirm"
			],
			[
				"changeOwn",
				"changeOwnPasswordSuccessful"
			],
			[
				"cir",
				"criticalError"
			],
			[
				"obs",
				"observableArray"
			],
			[
				"pass",
				"password"
			],
			[
				"causedBy",
				"causedByKey"
			],
			[
				"caused",
				"causedBy"
			],
			[
				"agentSe",
				"agentSearch"
			],
			[
				"ini",
				"initDone"
			],
			[
				"error",
				"errormessage"
			],
			[
				"dateSelect",
				"dateSelectorOnlyYesterday"
			],
			[
				"single",
				"singleDateSelector"
			],
			[
				"singleD",
				"singleDateSelectorVisible"
			],
			[
				"JS",
				"json_encode"
			],
			[
				"startU",
				"startUpdateTime"
			],
			[
				"autoUp",
				"autoUpdating"
			],
			[
				"autou",
				"autoUpdating"
			],
			[
				"dateSel",
				"dateSelector"
			],
			[
				"tsSele",
				"tsSelectorVisible"
			],
			[
				"syncAja",
				"syncAjaxTimeout"
			],
			[
				"asyncAja",
				"asyncAjaxTimeout"
			],
			[
				"bne",
				"bneoffer"
			],
			[
				"errorR",
				"sendErrorResponse"
			],
			[
				"toggleMod",
				"toggleModuleVisibility"
			],
			[
				"topDropM",
				"topDropMenuVisible"
			],
			[
				"in",
				"inside"
			],
			[
				"obser",
				"observable"
			],
			[
				"selected",
				"selectedAgent"
			],
			[
				"agentSelect",
				"agentSelectorVisible"
			],
			[
				"sub",
				"subscribe"
			],
			[
				"agentSel",
				"agentSelectorVisible"
			],
			[
				"selecte",
				"selectedAgent"
			],
			[
				"generateRan",
				"generateRandomString"
			],
			[
				"update",
				"updateSearchCallback"
			],
			[
				"updateS",
				"updateSearchCallback"
			],
			[
				"searh",
				"searchVisible"
			],
			[
				"comp",
				"computed"
			],
			[
				"departmentfi",
				"departmentfilter"
			],
			[
				"depart",
				"departmentFilters"
			],
			[
				"depar",
				"departments"
			],
			[
				"arra",
				"arrayRequest"
			],
			[
				"endof",
				"endOfWaitingTime"
			],
			[
				"normalizeDate",
				"normalizeDateStart"
			],
			[
				"calc",
				"calculatedDate"
			],
			[
				"norm",
				"normalizedDate"
			],
			[
				"dateTo",
				"dateToNormalize"
			],
			[
				"modle",
				"moduleSelectorVisible"
			],
			[
				"modu",
				"moduleSelectorVisible"
			],
			[
				"url",
				"urlencode"
			],
			[
				"access",
				"accessDenied"
			],
			[
				"table",
				"tableRows"
			],
			[
				"current",
				"currentView"
			],
			[
				"list",
				"list-style-position"
			],
			[
				"topD",
				"topDropMenuVisible"
			],
			[
				"dashboar",
				"dashboardModules"
			],
			[
				"old",
				"oldTimezone"
			],
			[
				"date_de",
				"date_default_timezone_set"
			],
			[
				"conta",
				"containerId"
			],
			[
				"init",
				"initialized"
			],
			[
				"Reque",
				"Requeued"
			],
			[
				"auto",
				"autoupdate"
			],
			[
				"create",
				"createJSONResponse"
			],
			[
				"getReq",
				"getRequestFilter"
			],
			[
				"requestFilter",
				"requestFilters"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"package re",
				"Package Control: Remove Package"
			],
			[
				"themrf",
				"Themr: List favorite themes"
			],
			[
				"themr",
				"Themr: List favorite themes"
			],
			[
				"settings",
				"Preferences: Settings - User"
			],
			[
				"schemr",
				"Schemr: List all schemes"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"jump",
				"BracketHighlighter: Jump to Left Bracket"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			],
			[
				"schrem",
				"Schemr: List all schemes"
			],
			[
				"setup",
				"SFTP: Setup Server…"
			],
			[
				"sftp",
				"SFTP: Browse Server…"
			],
			[
				"brows",
				"SFTP: Browse Server…"
			],
			[
				"format",
				"Format: Javascript"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"sch",
				"Schemr: List all schemes"
			]
		],
		"width": 579.0
	},
	"console":
	{
		"height": 285.0,
		"history":
		[
			"import urllib2,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation') "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/rdg/repos/buildit"
	],
	"file_history":
	[
		"/Users/rdg/repos/buildit/README.md",
		"/Users/rdg/repos/buildit/2do.txt",
		"/Users/rdg/repos/buildit/bower.json",
		"/Users/rdg/repos/buildit/package.json",
		"/Users/rdg/repos/buildit/node_modules/gulp-autoprefixer/node_modules/autoprefixer-core/node_modules/caniuse-db/features-json/png-alpha.json",
		"/Users/rdg/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/rdg/repos/buildit/gulp/tasks/sass.js",
		"/Users/rdg/repos/buildit/gulp/tasks/scsslint.js",
		"/Users/rdg/repos/buildit/src/coffeescript/head.coffee",
		"/Users/rdg/repos/buildit/src/sass/theme.scss",
		"/Users/rdg/repos/buildit/gulpfile.js",
		"/Users/rdg/repos/buildit/sftp-config.json",
		"/Users/rdg/repos/buildit/.gitignore",
		"/T/buildit/buildit.sublime-project",
		"/T/buildit/sftp-config.json",
		"/T/buildit/package.json",
		"/T/CheckinNode/src/sass/app.scss",
		"/T/CheckinNode/src/sass/_typography.scss",
		"/T/CheckinNode/src/sass/_scss-mixins.scss",
		"/T/CheckinNode/src/javascript/app.coffee",
		"/T/CheckinNode/src/javascript/view.coffee",
		"/T/CheckinNode/src/javascript/template.hbs",
		"/T/CheckinNode/gulp/config.js",
		"/T/CheckinNode/gulp/tasks/build.js",
		"/T/CheckinNode/gulp/tasks/browserify.js",
		"/T/CheckinNode/gulp/tasks/watch.js",
		"/T/CheckinNode/gulp/tasks/setWatch.js",
		"/T/CheckinNode/gulp/tasks/markup.js",
		"/T/CheckinNode/gulp/tasks/default.js",
		"/T/CheckinNode/gulp/tasks/sass.js",
		"/T/CheckinNode/src/htdocs/index.html",
		"/T/CheckinNode/gulpfile.js",
		"/T/CheckinNode/.gitignore",
		"/T/CheckinNode/src/sass/_typography.sass",
		"/T/CheckinNode/package.json",
		"/T/CheckinNode/README.md",
		"/T/CheckinNode/src/javascript/head.coffee",
		"/T/CheckinNode/src/sass/app.sass",
		"/T/CheckinNode/sftp-config.json",
		"/T/CheckinNode/LICENSE.md",
		"/T/CheckinNode/config.rb",
		"/T/Startup/startup.hta",
		"/T/Checkin/libs/utilities.js",
		"/T/Checkin/libs/checkin.js",
		"/T/Checkin/ico/tool.ico",
		"/T/Checkin/reports.html",
		"/T/Checkin/checkinapp.html",
		"/T/Checkin/checkout.html",
		"/T/Checkin/libs/jquery-2.1.3.min.js",
		"/T/Checkin/dbqueries.php",
		"/T/Checkin/2do.txt",
		"/T/Checkin/api.php",
		"/T/Checkin/changelog.txt",
		"/T/Checkin/css/checkout.css",
		"/T/Checkin/skillmatrix.html",
		"/T/Checkin/.htaccess",
		"/T/Checkin/libs/ajax.js",
		"/T/Checkin/libs/checkout.js",
		"/T/Checkin/libs/reports.js",
		"/T/Checkin/libs/translate.js",
		"/T/Checkin/release.sh",
		"/T/Checkin/js/checkin.min.js",
		"/T/Checkin/dummyrequests.php",
		"/T/Checkin/request-states.txt",
		"/T/Checkin/request.php",
		"/T/Checkin/routing.txt",
		"/T/@GMT-2014.11.29-17.00.04/Checkin/libs/checkout.js",
		"/T/@GMT-2014.12.01-17.00.09/Checkin/libs/checkout.js",
		"/T/Inventar/src/app.css",
		"/T/Inventar/src/components/materialsearch/materialsearch.js",
		"/T/Inventar/src/database.js",
		"/T/Inventar/src/components/materialsearch/materialsearch.css",
		"/T/Inventar/src/components/materialsearch/materialsearch.html",
		"/T/Checkin/database.php",
		"/T/Checkin/checkin.html",
		"/T/Checkin/runner_place.php",
		"/T/@GMT-2014.11.30-17.00.05/Checkin/libs/checkin.js",
		"/T/Checkin/js/checkout.min.js",
		"/T/Checkin/libs/touchswipe.js",
		"/T/Inventar/src/components/locationmanager2/locationmanager2.js",
		"/T/Checkin/css/reports.css",
		"/T/Checkin/img/tableloader.txt",
		"/T/Checkin/routingsim.php",
		"/T/Checkin/img/tableloader8.gif",
		"/T/Checkin/img/tableloader7.gif",
		"/T/Checkin/apitest.html",
		"/C/Users/tsghomi3/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/H4XVID6P/api.json",
		"/C/Users/tsghomi3/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/HHYZUBP7/api.json",
		"/T/Checkin/libs/knockout-bindings.js",
		"/W/Hosting/cgi-local/access_log",
		"/W/Hosting/www.backup/TS/livenet/lvowned2.php",
		"/W/Hosting/www.backup/TS/register.php",
		"/W/Hosting/www.backup/TS/index.php",
		"/W/Hosting/www.backup/TS/changeisp.php",
		"/W/Hosting/www.backup/TS/overflow.js",
		"/W/Hosting/www.backup/TS/simple_html_dom.php",
		"/W/Hosting/www.backup/ping2/getnsn.php",
		"/W/Hosting/www.backup/testgps.php",
		"/W/Hosting/www.backup/pause/index.php",
		"/T/Checkin/csvdownload.php",
		"/T/Startup/startup.html",
		"//Sg1004z-v2/tsghomi3$/Desktop/_bin/sublime/Data/Packages/User/Plain text.sublime-settings",
		"/T/Inventar/src/app.js",
		"/T/Checkin/js/reports.min.js",
		"/T/Checkin/css/checkin.css",
		"/T/Checkin/libs/knockout-3.2.0.patched.js",
		"/T/Checkin/libs/knockout-3.1.0.patched.js",
		"/T/Checkin/img/tableloader1.gif",
		"/T/Checkin/img/ajax-loader4.gif",
		"/T/Checkin/img/ajax-loader5.gif",
		"/T/Checkin/img/ajax-loader.gif",
		"/T/Checkin/img/ajax-loader3.gif",
		"/T/Checkin/getfile.php",
		"//SG1004Z-V2/TSGHOMI3$/Desktop/import.php",
		"/T/Checkin/index.php",
		"/T/CRM Offer/CRM Administration.hta",
		"/T/re-port2/report.js",
		"/T/Checkin/img/noresult.png",
		"/T/Checkin/img/checkmark.png",
		"/T/Checkin/img/floor.jpg",
		"/T/Checkin/img/info.png",
		"/T/Checkin/img/loading.gif",
		"/T/Checkin/img/logo.png",
		"/T/Checkin/img/og3.jpg",
		"/T/Checkin/img/start.png",
		"/T/Checkin/img/stop.png",
		"/T/Checkin/img/stop.svg",
		"/T/Checkin/img/tea.gif"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"<open folders>",
			"W:\\Hosting\\www.backup",
			"T:\\Checkin\\",
			"T:\\Checkin\\libs",
			"T:\\Checkin\\",
			"T:\\Checkin\\libs\\",
			"T:\\Checkin",
			"T:\\Checkin\\libs",
			"<open folders>",
			"T:\\flow"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"livenet",
			"stack.push",
			"killsecurelogin",
			"  Bearbeiten Bearbeiten  Bearbeiten Direkt bearbeiten  Kopieren Kopieren  Löschen Löschen  ",
			".*('[^']+').*",
			"visibleCurrentRequests.removeAll",
			"self.updating(true)",
			"self.updating = ",
			"menuAction",
			"Abschliessen",
			"Stoppen",
			"forceInstantUpdate",
			"stopUpdate",
			"self.finishFullUpdate",
			"if (isActionPending",
			"tsActionPending",
			"isActionPending",
			"actionPending.push",
			"isactionpending",
			"standardError",
			"isActionPending",
			"assignRequestToMe",
			"isStopWord",
			"assignRequestToNewTS",
			"return",
			"tsReady",
			".first",
			"updateStack",
			"actionPending",
			"errorCallback",
			"error",
			"duplicate",
			"columnheader",
			"columnghea",
			"tsReady",
			"loadAvailableTS",
			"availableTS",
			"reassign",
			"waitingTimeOK",
			"assignRequestToNewTS",
			"SELECT.*FROM ts_places",
			"SELECT.*FROM stars",
			"SELECT.*FROMstars",
			"initCheckin",
			"initcheckint",
			"checkininit",
			"active = true",
			"runnerPlaces",
			"ts_places",
			"updateTSList",
			"updateStack",
			"td",
			"columnheader",
			"NOK",
			"dashboardNOK",
			"i.",
			"background-",
			"ffebc7",
			"i.",
			"dashboardNOK",
			"sectorList",
			"i.",
			"requestActionPending",
			"actionPending",
			"requestActionPending",
			"actionPending",
			"requestActionPending",
			"selected",
			"console.log",
			"translate",
			"$this->errorlog",
			"updateCount",
			"debugger;",
			"todo",
			"queueVisible() && (screenWidth() >= breakPoint)",
			"breakpoint",
			"monitoring",
			"wrapper",
			".warapper",
			"monitoring",
			"'0' : '4px'",
			"'4px' : '0'",
			"queueVisible(",
			"'4px', '0'",
			"monitoring",
			"ko if: !queueVisible",
			"wrapper",
			"statusboard-container",
			"words",
			"self.login",
			"toggleMobileView",
			"self.mobileView",
			"self.mobileView(true)",
			"Mir Zuordnen",
			"selectCurrentRequest",
			"selectRequest",
			"StatusRequest",
			"tsname",
			"StatusRequest",
			"updateStatusboardQueue",
			"statusboardQueue",
			"mobileView",
			"#content",
			"content",
			"#main",
			"#content",
			"#main",
			"breakpoint",
			"self.updating(false",
			"self.update",
			"queueVisible",
			"ajax-loader",
			"self.updating =",
			"visibleCurrent",
			"visible",
			"visibleCurrentRequests",
			"waitingRequestCount",
			"inWorkRequestCount",
			"visibleTSAlerts",
			"visibleTSInfo",
			"visibleCurrentRequests",
			"sectorInfo",
			"onlyOwnDepartmentVisible",
			"fullupdate",
			"gullupdate",
			"getParam",
			"n getParam",
			"getParam"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"\\1",
			"if (self.isActionPending",
			"",
			"queueVisible() || (screenWidth() < breakPoint)",
			"'0' : '4px', overflowY: queueVisible() ? '' : 'auto'",
			"'0' : '4px'",
			"'4px' : '0'",
			"tsdummy1",
			"block25",
			"JSON.stringify",
			"switchViewPort",
			"!",
			"!self.viewPortOneVisible()",
			"function (",
			"function ()",
			"",
			"!self.viewPortOneVisible()",
			"viewPortOneVisible",
			"updateViewport",
			"viewPortTwoVisible",
			"updateViewport",
			"1.8vw",
			"pendingQueueLength()",
			"pendingQueueLength",
			"$this->arr",
			"return $this->op",
			"$this->database->query",
			"b.surname, ', ', b.name",
			"a.surname, ', ', a.name",
			"b.surname,', ',b.name",
			"a.surname,', ',a.name",
			"surname,', ',name",
			"authCheckout",
			"requirePlace",
			"tsSector",
			"div class",
			"class=\"div50\"",
			"$user",
			".action",
			"",
			"\n    curIE = objIE;\n    setTimeout(runStack, 200);",
			"stack.push(\"\\1\");",
			"push(",
			"",
			"stack.push",
			"",
			"var objIE = new ActiveXObject(\"InternetExplorer.Application\");\nvar shell = new ActiveXObject(\"WScript.Shell\");\n",
			"",
			"objIE.Visible = false;",
			";",
			"objIE.Visible = true;",
			"new ActiveXObject(\"InternetExplorer.Application\");",
			"while (objIE.Busy) {\n	}",
			"\"InternetExplorer.Application\"",
			"while (objIE.Busy) {\n	}",
			"true",
			";",
			"objIE.Navigate\\1;",
			"\\1",
			", CLng(navOpenInBackgroundTab))",
			", CLng(navOpenInNewWindow))",
			"var \\1 = new ActiveXObject(\"\\1\")",
			"}",
			"function \\1() {",
			"\\1,",
			"objIE.Navigate (\\1), CLng(navOpenInNewWindow)\n	",
			"",
			"objIE.Navigate (\\1), CLng(navOpenInBackgroundTab)",
			"Const \\1",
			"COUNT(response_helpful)",
			"<script type=\"text/javascript\" src=\"\\1\"></script>",
			"knockout-3.2.0.debug",
			"utf-8",
			"readonly=\"readonly\"",
			"(int) $row['t'] * 1000",
			"$this->getFloorAsT($this->getParam('datefrom'))",
			"$this->getFloorAsT($this->getParam('datefrom'), $chunk)",
			";\\n",
			"\\n;",
			";",
			"Script: \\n\" + script",
			"!in_array('\\1', $csv->titles)",
			"mysql_real_escape_string(utf8_encode(\\1))",
			"",
			"ajaxErrorLoading",
			"standardError",
			"undefined",
			"op",
			"req",
			"mysql_real_escape_string($this->currentUser)",
			"'",
			"Sonntags",
			"Samstags",
			"Freitags",
			"Donnerstags",
			"Mittwochs",
			"Dienstags",
			"Montags",
			"currentUser",
			"$this->currentUser",
			"name,' ',surname",
			"\\1.name,' ',\\2.surname",
			"Abschluss-Kommentar",
			"1px solid #fff",
			"d.m.Y",
			"H:i:s'",
			"'type' => 'line', 'step' => true",
			"line",
			"'type' => 'spline'",
			"ss",
			"','",
			"requests.start_time",
			"(requests.status <> 'Cancelled' AND requests.status <> 'Requeued')",
			"label",
			"div",
			"new Date().getTime",
			"new Date",
			"\" . $this->getFloorAsT() . \"",
			"self.autoupdate",
			"TS",
			"a.menuitem-disabled:hover",
			"a.menuitem:hover",
			"",
			"currentView() ==",
			"Bender",
			"Dots",
			"Bender"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 326.0
	},
	"output.unsaved_changes":
	{
		"height": 116.0
	},
	"project": "buildit.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"T:\\messagequeue\\messagequeue.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
		"xdebug":
		{
			"hide_conflict": false
		}
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 335.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
